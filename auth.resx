<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAcCAYAAAAAwr0iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAJ9JREFUSEvtkq0OwjAURq/GMovF8w7YYUGyd0DPDju9l+U7tE3I3Mha9Z3kZLft
        kvvThjHGmD84yJsc5ZIlvsqjrMpJvuVTntnIEA9ykvxThU6S/PJdpSnM2TsbgjPWVSZBh30K4yFZcx0U
        9nvG95XCfaF7EsK6S/bZA2LeRFVIVooBplAKaAJjZuxMgUKIyztoAklJSNdY7t8YY8xGIj4wnxKBwIJP
        twAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>